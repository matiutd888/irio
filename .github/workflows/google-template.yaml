# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment vars (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string
  push:
    branches: [ "^*" ]
  pull_request:
    branches: [ "^*" ]

env:
  PROJECT_ID: ${{ vars.GKE_PROJECT }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  GKE_CLUSTER: ${{ vars.GKE_CLUSTER }}
  GKE_ZONE: ${{ vars.GKE_ZONE }}
  REPOSITORY: ${{ vars.REPOSITORY }}
  TELEGRAM_BOT_ID: ${{ vars.TELEGRAM_BOT_ID }}

jobs:
  build-image-hc:
    name: Build and push healthcheck image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        credentials_json: '{"type": "service_account","project_id": "blep-runner","private_key_id": "a2720399b38bebcfb4f98494ce133607b5c15beb","private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC9BjbKMl/S7Jpg\nhCe7cUastWQGasRZI9Ahfp2BCPowbF+TknOVH5qJ5R+kiHYnpoz3cfjCW0SHRusf\nidPZnZ+INz2V4dtSQnNQxTl2ZGh6+uTXmAOVSzQsLjDPKQkSWtHJP8ZwH1qTHzLA\nFKN2JkT496Gc6pJ+dYA5nYTUYjhh7Psvdf3CvCu7G2GwWxMugmek1z0GC0Qk6yGu\niqLaO3UqTvc8RcXUnRPQSMpVt4Tg3/gyip6RkLIM7sq5aE/RELsOGGAZdZ60+HGd\nOkF7LXXjOt47hOT0U3T8z4GHSAQMmPDLfq9bKVZXHXjsOIwj7jo/wjHh7UZP2/fB\ny1Qe/A2RAgMBAAECggEAA24xUJxXLZtmZlXDqFTTEueUVgL6RwFdwbvb5Sd57ebL\nmcCkyRoqmnHOcBSba1cMFCINAQ75uIhGlFsSnY6NIoJZI2cWzUCAOgEoTLAgDspO\nnKSJPRyBKQOaFmpg3CTKjZ/TDL4e7VBZwg9l04s4gXmyBMhjifi9L95+VoHlUs6b\njSFMGwdPWOGS7mSV8dcdnF/G/fbOMxv0AgmBeRgUB7EEuhopy8VGaBAjjCws5g8v\nOJn+2uDwPzqLbEtrVVssjjDX1S2qYy6ZQxQCEq3TlpjYsaKQog8im+j90k46lG2T\npU/sclv9DYSYFG5EZAR655ToYBcNaNg0BMFxZxVUQQKBgQD02ThIF590ZvYmQT+j\n46pC6eUf4SEtT+OJndvTG81le3Eqg0SQf9trSoEV+mHLW2BXftoqxIX+m0bpXo67\nH0T6mlCwtcNVV+TorfBo8BpKpzDy6sKq2ProVV7m4rOpK7SN7uGYaDLUSXnSmw2M\n3hYwfyxBjxVF8UHlxsO7St9h8QKBgQDFoh5XdURLBbUv0XfA4kdn3DKGqsGJAgka\nNMlIogjDufDWyTmfdUvNvW/Ba1leUTRXYNs2rFfPan148djhct0f2/Nfo4PjbUaq\njf79qJx190HKtfIxyxyRs9JF1BwPnmBf+t3f6+agSwEtSyW1W46awZ8fYXf6XXKT\nkDm9kzHFoQKBgQDsQHxx83lEU+TG3MaPWKl8jzsqG4xrsF4Y91yYwobZmNaE8sxB\nsV0ClY0gq8uY8L5xLlFMWvv/w8wUecy2+WERfbzGBVxJCNozOUJzvtlflxtACQ10\n1JClhVpg5fX9EdLR8OF0sXX6KDuH31yfw9sdSFhnmawpJLU1BSjvmzsXwQKBgGWT\n0ax55UP6BwowyzAkHTdQgdedZCObHDqP7vSZ849FvndmrWs7yl5Qg2QSXLiRXCmc\n6o7LPcapoRvMkgAuHWEGl6wMSvlVbQC0Qt71DpXDI9mgcn8NOf3ZQrYJMvMEH9y0\n/9zbTooMgupYuWThTgZUhgiG/Dd+WCln84VwZiCBAoGBAJnTZN7Dbfx48Dchf0oY\nxuj5WWF05QaLCD1Z7fsUPVcM5Hv+l7nPqU0Omfo7yv4tFGxllOb+Hm0c3cN1WgQZ\n4aXmN+esQEENAZj+VDVNgZkmNn3azn2rgVfqyT55tT261SMRgJ9h80QwpIBxr+O0\nownq9td2I8sJmV4WtzaIVr9i\n-----END PRIVATE KEY-----\n","client_email": "githubrunner@blep-runner.iam.gserviceaccount.com","client_id": "117788130918662674317","auth_uri": "https://accounts.google.com/o/oauth2/auth","token_uri": "https://oauth2.googleapis.com/token","auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/githubrunner%40blep-runner.iam.gserviceaccount.com","universe_domain": "googleapis.com"}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{vars.GAR_LOCATION}}-docker.pkg.dev
  
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Build and push healthcheck image
      uses: docker/build-push-action@v5
      with:
        context: services/healthcheck
        push: true
        tags: "${{vars.GAR_LOCATION}}-docker.pkg.dev/${{vars.PROJECT_ID}}/${{vars.REPOSITORY}}/healthcheck:${{github.sha}}"
        cache-from: type=gha, scope=healthcheck
        cache-to: type=gha,mode=max,scope=healthcheck
  build-image-notif:
    name: Build and push notification image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        credentials_json: '{"type": "service_account","project_id": "blep-runner","private_key_id": "a2720399b38bebcfb4f98494ce133607b5c15beb","private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC9BjbKMl/S7Jpg\nhCe7cUastWQGasRZI9Ahfp2BCPowbF+TknOVH5qJ5R+kiHYnpoz3cfjCW0SHRusf\nidPZnZ+INz2V4dtSQnNQxTl2ZGh6+uTXmAOVSzQsLjDPKQkSWtHJP8ZwH1qTHzLA\nFKN2JkT496Gc6pJ+dYA5nYTUYjhh7Psvdf3CvCu7G2GwWxMugmek1z0GC0Qk6yGu\niqLaO3UqTvc8RcXUnRPQSMpVt4Tg3/gyip6RkLIM7sq5aE/RELsOGGAZdZ60+HGd\nOkF7LXXjOt47hOT0U3T8z4GHSAQMmPDLfq9bKVZXHXjsOIwj7jo/wjHh7UZP2/fB\ny1Qe/A2RAgMBAAECggEAA24xUJxXLZtmZlXDqFTTEueUVgL6RwFdwbvb5Sd57ebL\nmcCkyRoqmnHOcBSba1cMFCINAQ75uIhGlFsSnY6NIoJZI2cWzUCAOgEoTLAgDspO\nnKSJPRyBKQOaFmpg3CTKjZ/TDL4e7VBZwg9l04s4gXmyBMhjifi9L95+VoHlUs6b\njSFMGwdPWOGS7mSV8dcdnF/G/fbOMxv0AgmBeRgUB7EEuhopy8VGaBAjjCws5g8v\nOJn+2uDwPzqLbEtrVVssjjDX1S2qYy6ZQxQCEq3TlpjYsaKQog8im+j90k46lG2T\npU/sclv9DYSYFG5EZAR655ToYBcNaNg0BMFxZxVUQQKBgQD02ThIF590ZvYmQT+j\n46pC6eUf4SEtT+OJndvTG81le3Eqg0SQf9trSoEV+mHLW2BXftoqxIX+m0bpXo67\nH0T6mlCwtcNVV+TorfBo8BpKpzDy6sKq2ProVV7m4rOpK7SN7uGYaDLUSXnSmw2M\n3hYwfyxBjxVF8UHlxsO7St9h8QKBgQDFoh5XdURLBbUv0XfA4kdn3DKGqsGJAgka\nNMlIogjDufDWyTmfdUvNvW/Ba1leUTRXYNs2rFfPan148djhct0f2/Nfo4PjbUaq\njf79qJx190HKtfIxyxyRs9JF1BwPnmBf+t3f6+agSwEtSyW1W46awZ8fYXf6XXKT\nkDm9kzHFoQKBgQDsQHxx83lEU+TG3MaPWKl8jzsqG4xrsF4Y91yYwobZmNaE8sxB\nsV0ClY0gq8uY8L5xLlFMWvv/w8wUecy2+WERfbzGBVxJCNozOUJzvtlflxtACQ10\n1JClhVpg5fX9EdLR8OF0sXX6KDuH31yfw9sdSFhnmawpJLU1BSjvmzsXwQKBgGWT\n0ax55UP6BwowyzAkHTdQgdedZCObHDqP7vSZ849FvndmrWs7yl5Qg2QSXLiRXCmc\n6o7LPcapoRvMkgAuHWEGl6wMSvlVbQC0Qt71DpXDI9mgcn8NOf3ZQrYJMvMEH9y0\n/9zbTooMgupYuWThTgZUhgiG/Dd+WCln84VwZiCBAoGBAJnTZN7Dbfx48Dchf0oY\nxuj5WWF05QaLCD1Z7fsUPVcM5Hv+l7nPqU0Omfo7yv4tFGxllOb+Hm0c3cN1WgQZ\n4aXmN+esQEENAZj+VDVNgZkmNn3azn2rgVfqyT55tT261SMRgJ9h80QwpIBxr+O0\nownq9td2I8sJmV4WtzaIVr9i\n-----END PRIVATE KEY-----\n","client_email": "githubrunner@blep-runner.iam.gserviceaccount.com","client_id": "117788130918662674317","auth_uri": "https://accounts.google.com/o/oauth2/auth","token_uri": "https://oauth2.googleapis.com/token","auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/githubrunner%40blep-runner.iam.gserviceaccount.com","universe_domain": "googleapis.com"}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{vars.GAR_LOCATION}}-docker.pkg.dev
  
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Build and push notification image
      uses: docker/build-push-action@v5
      with:
        context: services/notification
        push: true
        tags: "${{vars.GAR_LOCATION}}-docker.pkg.dev/${{vars.PROJECT_ID}}/${{vars.REPOSITORY}}/notification:${{github.sha}}"
        cache-from: type=gha, scope=notification
        cache-to: type=gha,mode=max, scope=notification

  build-image-test-service:
    name: Build and push test service image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        credentials_json: '{"type": "service_account","project_id": "blep-runner","private_key_id": "a2720399b38bebcfb4f98494ce133607b5c15beb","private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC9BjbKMl/S7Jpg\nhCe7cUastWQGasRZI9Ahfp2BCPowbF+TknOVH5qJ5R+kiHYnpoz3cfjCW0SHRusf\nidPZnZ+INz2V4dtSQnNQxTl2ZGh6+uTXmAOVSzQsLjDPKQkSWtHJP8ZwH1qTHzLA\nFKN2JkT496Gc6pJ+dYA5nYTUYjhh7Psvdf3CvCu7G2GwWxMugmek1z0GC0Qk6yGu\niqLaO3UqTvc8RcXUnRPQSMpVt4Tg3/gyip6RkLIM7sq5aE/RELsOGGAZdZ60+HGd\nOkF7LXXjOt47hOT0U3T8z4GHSAQMmPDLfq9bKVZXHXjsOIwj7jo/wjHh7UZP2/fB\ny1Qe/A2RAgMBAAECggEAA24xUJxXLZtmZlXDqFTTEueUVgL6RwFdwbvb5Sd57ebL\nmcCkyRoqmnHOcBSba1cMFCINAQ75uIhGlFsSnY6NIoJZI2cWzUCAOgEoTLAgDspO\nnKSJPRyBKQOaFmpg3CTKjZ/TDL4e7VBZwg9l04s4gXmyBMhjifi9L95+VoHlUs6b\njSFMGwdPWOGS7mSV8dcdnF/G/fbOMxv0AgmBeRgUB7EEuhopy8VGaBAjjCws5g8v\nOJn+2uDwPzqLbEtrVVssjjDX1S2qYy6ZQxQCEq3TlpjYsaKQog8im+j90k46lG2T\npU/sclv9DYSYFG5EZAR655ToYBcNaNg0BMFxZxVUQQKBgQD02ThIF590ZvYmQT+j\n46pC6eUf4SEtT+OJndvTG81le3Eqg0SQf9trSoEV+mHLW2BXftoqxIX+m0bpXo67\nH0T6mlCwtcNVV+TorfBo8BpKpzDy6sKq2ProVV7m4rOpK7SN7uGYaDLUSXnSmw2M\n3hYwfyxBjxVF8UHlxsO7St9h8QKBgQDFoh5XdURLBbUv0XfA4kdn3DKGqsGJAgka\nNMlIogjDufDWyTmfdUvNvW/Ba1leUTRXYNs2rFfPan148djhct0f2/Nfo4PjbUaq\njf79qJx190HKtfIxyxyRs9JF1BwPnmBf+t3f6+agSwEtSyW1W46awZ8fYXf6XXKT\nkDm9kzHFoQKBgQDsQHxx83lEU+TG3MaPWKl8jzsqG4xrsF4Y91yYwobZmNaE8sxB\nsV0ClY0gq8uY8L5xLlFMWvv/w8wUecy2+WERfbzGBVxJCNozOUJzvtlflxtACQ10\n1JClhVpg5fX9EdLR8OF0sXX6KDuH31yfw9sdSFhnmawpJLU1BSjvmzsXwQKBgGWT\n0ax55UP6BwowyzAkHTdQgdedZCObHDqP7vSZ849FvndmrWs7yl5Qg2QSXLiRXCmc\n6o7LPcapoRvMkgAuHWEGl6wMSvlVbQC0Qt71DpXDI9mgcn8NOf3ZQrYJMvMEH9y0\n/9zbTooMgupYuWThTgZUhgiG/Dd+WCln84VwZiCBAoGBAJnTZN7Dbfx48Dchf0oY\nxuj5WWF05QaLCD1Z7fsUPVcM5Hv+l7nPqU0Omfo7yv4tFGxllOb+Hm0c3cN1WgQZ\n4aXmN+esQEENAZj+VDVNgZkmNn3azn2rgVfqyT55tT261SMRgJ9h80QwpIBxr+O0\nownq9td2I8sJmV4WtzaIVr9i\n-----END PRIVATE KEY-----\n","client_email": "githubrunner@blep-runner.iam.gserviceaccount.com","client_id": "117788130918662674317","auth_uri": "https://accounts.google.com/o/oauth2/auth","token_uri": "https://oauth2.googleapis.com/token","auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/githubrunner%40blep-runner.iam.gserviceaccount.com","universe_domain": "googleapis.com"}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{vars.GAR_LOCATION}}-docker.pkg.dev
  
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Build and push configuration image
      uses: docker/build-push-action@v5
      with:
        context: service_test
        push: true
        tags: "${{vars.GAR_LOCATION}}-docker.pkg.dev/${{vars.PROJECT_ID}}/${{vars.REPOSITORY}}/testing_service:${{github.sha}}"
        cache-from: type=gha, scope=configuration
        cache-to: type=gha,mode=max, scope=configuration
  build-image-conf:
    name: Build and push configuration image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        credentials_json: '{"type": "service_account","project_id": "blep-runner","private_key_id": "a2720399b38bebcfb4f98494ce133607b5c15beb","private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC9BjbKMl/S7Jpg\nhCe7cUastWQGasRZI9Ahfp2BCPowbF+TknOVH5qJ5R+kiHYnpoz3cfjCW0SHRusf\nidPZnZ+INz2V4dtSQnNQxTl2ZGh6+uTXmAOVSzQsLjDPKQkSWtHJP8ZwH1qTHzLA\nFKN2JkT496Gc6pJ+dYA5nYTUYjhh7Psvdf3CvCu7G2GwWxMugmek1z0GC0Qk6yGu\niqLaO3UqTvc8RcXUnRPQSMpVt4Tg3/gyip6RkLIM7sq5aE/RELsOGGAZdZ60+HGd\nOkF7LXXjOt47hOT0U3T8z4GHSAQMmPDLfq9bKVZXHXjsOIwj7jo/wjHh7UZP2/fB\ny1Qe/A2RAgMBAAECggEAA24xUJxXLZtmZlXDqFTTEueUVgL6RwFdwbvb5Sd57ebL\nmcCkyRoqmnHOcBSba1cMFCINAQ75uIhGlFsSnY6NIoJZI2cWzUCAOgEoTLAgDspO\nnKSJPRyBKQOaFmpg3CTKjZ/TDL4e7VBZwg9l04s4gXmyBMhjifi9L95+VoHlUs6b\njSFMGwdPWOGS7mSV8dcdnF/G/fbOMxv0AgmBeRgUB7EEuhopy8VGaBAjjCws5g8v\nOJn+2uDwPzqLbEtrVVssjjDX1S2qYy6ZQxQCEq3TlpjYsaKQog8im+j90k46lG2T\npU/sclv9DYSYFG5EZAR655ToYBcNaNg0BMFxZxVUQQKBgQD02ThIF590ZvYmQT+j\n46pC6eUf4SEtT+OJndvTG81le3Eqg0SQf9trSoEV+mHLW2BXftoqxIX+m0bpXo67\nH0T6mlCwtcNVV+TorfBo8BpKpzDy6sKq2ProVV7m4rOpK7SN7uGYaDLUSXnSmw2M\n3hYwfyxBjxVF8UHlxsO7St9h8QKBgQDFoh5XdURLBbUv0XfA4kdn3DKGqsGJAgka\nNMlIogjDufDWyTmfdUvNvW/Ba1leUTRXYNs2rFfPan148djhct0f2/Nfo4PjbUaq\njf79qJx190HKtfIxyxyRs9JF1BwPnmBf+t3f6+agSwEtSyW1W46awZ8fYXf6XXKT\nkDm9kzHFoQKBgQDsQHxx83lEU+TG3MaPWKl8jzsqG4xrsF4Y91yYwobZmNaE8sxB\nsV0ClY0gq8uY8L5xLlFMWvv/w8wUecy2+WERfbzGBVxJCNozOUJzvtlflxtACQ10\n1JClhVpg5fX9EdLR8OF0sXX6KDuH31yfw9sdSFhnmawpJLU1BSjvmzsXwQKBgGWT\n0ax55UP6BwowyzAkHTdQgdedZCObHDqP7vSZ849FvndmrWs7yl5Qg2QSXLiRXCmc\n6o7LPcapoRvMkgAuHWEGl6wMSvlVbQC0Qt71DpXDI9mgcn8NOf3ZQrYJMvMEH9y0\n/9zbTooMgupYuWThTgZUhgiG/Dd+WCln84VwZiCBAoGBAJnTZN7Dbfx48Dchf0oY\nxuj5WWF05QaLCD1Z7fsUPVcM5Hv+l7nPqU0Omfo7yv4tFGxllOb+Hm0c3cN1WgQZ\n4aXmN+esQEENAZj+VDVNgZkmNn3azn2rgVfqyT55tT261SMRgJ9h80QwpIBxr+O0\nownq9td2I8sJmV4WtzaIVr9i\n-----END PRIVATE KEY-----\n","client_email": "githubrunner@blep-runner.iam.gserviceaccount.com","client_id": "117788130918662674317","auth_uri": "https://accounts.google.com/o/oauth2/auth","token_uri": "https://oauth2.googleapis.com/token","auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/githubrunner%40blep-runner.iam.gserviceaccount.com","universe_domain": "googleapis.com"}'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://${{vars.GAR_LOCATION}}-docker.pkg.dev
  
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        buildkitd-flags: --debug
    - name: Build and push configuration image
      uses: docker/build-push-action@v5
      with:
        context: configuration_scripts
        push: true
        tags: "${{vars.GAR_LOCATION}}-docker.pkg.dev/${{vars.PROJECT_ID}}/${{vars.REPOSITORY}}/configuration:${{github.sha}}"
        cache-from: type=gha, scope=configuration
        cache-to: type=gha,mode=max, scope=configuration

  setup-build-publish-deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [build-image-hc, build-image-notif, build-image-conf]

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # Alternative option - authentication via credentials json
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        token_format: 'access_token'
        credentials_json: '{"type": "service_account","project_id": "blep-runner","private_key_id": "a2720399b38bebcfb4f98494ce133607b5c15beb","private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC9BjbKMl/S7Jpg\nhCe7cUastWQGasRZI9Ahfp2BCPowbF+TknOVH5qJ5R+kiHYnpoz3cfjCW0SHRusf\nidPZnZ+INz2V4dtSQnNQxTl2ZGh6+uTXmAOVSzQsLjDPKQkSWtHJP8ZwH1qTHzLA\nFKN2JkT496Gc6pJ+dYA5nYTUYjhh7Psvdf3CvCu7G2GwWxMugmek1z0GC0Qk6yGu\niqLaO3UqTvc8RcXUnRPQSMpVt4Tg3/gyip6RkLIM7sq5aE/RELsOGGAZdZ60+HGd\nOkF7LXXjOt47hOT0U3T8z4GHSAQMmPDLfq9bKVZXHXjsOIwj7jo/wjHh7UZP2/fB\ny1Qe/A2RAgMBAAECggEAA24xUJxXLZtmZlXDqFTTEueUVgL6RwFdwbvb5Sd57ebL\nmcCkyRoqmnHOcBSba1cMFCINAQ75uIhGlFsSnY6NIoJZI2cWzUCAOgEoTLAgDspO\nnKSJPRyBKQOaFmpg3CTKjZ/TDL4e7VBZwg9l04s4gXmyBMhjifi9L95+VoHlUs6b\njSFMGwdPWOGS7mSV8dcdnF/G/fbOMxv0AgmBeRgUB7EEuhopy8VGaBAjjCws5g8v\nOJn+2uDwPzqLbEtrVVssjjDX1S2qYy6ZQxQCEq3TlpjYsaKQog8im+j90k46lG2T\npU/sclv9DYSYFG5EZAR655ToYBcNaNg0BMFxZxVUQQKBgQD02ThIF590ZvYmQT+j\n46pC6eUf4SEtT+OJndvTG81le3Eqg0SQf9trSoEV+mHLW2BXftoqxIX+m0bpXo67\nH0T6mlCwtcNVV+TorfBo8BpKpzDy6sKq2ProVV7m4rOpK7SN7uGYaDLUSXnSmw2M\n3hYwfyxBjxVF8UHlxsO7St9h8QKBgQDFoh5XdURLBbUv0XfA4kdn3DKGqsGJAgka\nNMlIogjDufDWyTmfdUvNvW/Ba1leUTRXYNs2rFfPan148djhct0f2/Nfo4PjbUaq\njf79qJx190HKtfIxyxyRs9JF1BwPnmBf+t3f6+agSwEtSyW1W46awZ8fYXf6XXKT\nkDm9kzHFoQKBgQDsQHxx83lEU+TG3MaPWKl8jzsqG4xrsF4Y91yYwobZmNaE8sxB\nsV0ClY0gq8uY8L5xLlFMWvv/w8wUecy2+WERfbzGBVxJCNozOUJzvtlflxtACQ10\n1JClhVpg5fX9EdLR8OF0sXX6KDuH31yfw9sdSFhnmawpJLU1BSjvmzsXwQKBgGWT\n0ax55UP6BwowyzAkHTdQgdedZCObHDqP7vSZ849FvndmrWs7yl5Qg2QSXLiRXCmc\n6o7LPcapoRvMkgAuHWEGl6wMSvlVbQC0Qt71DpXDI9mgcn8NOf3ZQrYJMvMEH9y0\n/9zbTooMgupYuWThTgZUhgiG/Dd+WCln84VwZiCBAoGBAJnTZN7Dbfx48Dchf0oY\nxuj5WWF05QaLCD1Z7fsUPVcM5Hv+l7nPqU0Omfo7yv4tFGxllOb+Hm0c3cN1WgQZ\n4aXmN+esQEENAZj+VDVNgZkmNn3azn2rgVfqyT55tT261SMRgJ9h80QwpIBxr+O0\nownq9td2I8sJmV4WtzaIVr9i\n-----END PRIVATE KEY-----\n","client_email": "githubrunner@blep-runner.iam.gserviceaccount.com","client_id": "117788130918662674317","auth_uri": "https://accounts.google.com/o/oauth2/auth","token_uri": "https://oauth2.googleapis.com/token","auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/githubrunner%40blep-runner.iam.gserviceaccount.com","universe_domain": "googleapis.com"}'


    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ vars.GKE_CLUSTER }}
        location: ${{ vars.GKE_ZONE }}

    - name: Deploy
      if: inputs.environment == 'production'
      run: |-
        cd deployment/kubernetes-resources
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        
        # replacing the image name in the k8s template
        ./kustomize edit set image NOTIFICATION_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/notification:$GITHUB_SHA
        ./kustomize edit set image HEALTHCHECK_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/healthcheck:$GITHUB_SHA
        ./kustomize edit set image CONFIGURATION_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/configuration:$GITHUB_SHA
        ./kustomize build . | envsubst | kubectl apply -f -

        # For some reason deployments are not restarted.
        # Uncomment when we want to restart some deployment
        # kubectl rollout restart deploy healthcheck-app
        # kubectl rollout restart deploy notification-app
        # kubectl rollout restart deploy configuration-app
        
        # kubectl port-forward service/configuration-svc 8000:8000

    - name: Deploy Test
      if: inputs.environment == 'test'
      run: |-
        cd deployment/kubernetes-resources
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
        
        # replacing the image name in the k8s template
        ./kustomize edit set image NOTIFICATION_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/notification:$GITHUB_SHA
        ./kustomize edit set image HEALTHCHECK_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/healthcheck:$GITHUB_SHA
        ./kustomize edit set image CONFIGURATION_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/configuration:$GITHUB_SHA
        ./kustomize build . | envsubst | kubectl apply -f -
        cd ..
        mv kubernetes-resources/kustomize kubernetes-test-resources
        cd kubernetes-test-resources
        ./kustomize edit set image TESTING_SERVICE_IMAGE=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/testing_service:$GITHUB_SHA
        ./kustomize build . | envsubst | kubectl apply -f -

        # For some reason deployments are not restarted.
        # Uncomment when we want to restart some deployment
        # kubectl rollout restart deploy healthcheck-app
        # kubectl rollout restart deploy notification-app
        # kubectl rollout restart deploy configuration-app
        
        # kubectl port-forward service/configuration-svc 8000:8000
